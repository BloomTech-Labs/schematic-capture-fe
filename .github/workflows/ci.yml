# The name of the workflow
name: build

# What conditions trigger the workflow
#  In this case, all pushes and pull requests
on: [push, pull_request]

# The jobs that will be run, usually in parallel
jobs:
  # A job to generate and publish code coverage
  coverage:
    # A more descriptive name of the job
    name: Test and publish test coverage

    # The OS on which the job will run
    runs-on:
      ubuntu-latest
      # The steps for the job, executed in sequence
    steps:
      # A GitHub action for checking out the current branch
      - uses: actions/checkout@master

      # A GitHub action to install Yarn
      - uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install # will run `yarn install` command

      # A GitHub action to cache yarn dependencies
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # A GitHub action for running tests and publishing coverage
      - uses: paambaati/codeclimate-action@v2.6.0
        env:
          # An environment variable, the value is a GitHub repo secret
          # CC_TEST_REPORTER_ID: ${{ secrets.CodeClimateReporterId }}
          CC_TEST_REPORTER_ID: 12dcfce279bc5c9eb9fa7ba358ecbe48a525ce91187812cfc5c50f008045bc57
        with:
          # Run our `coverage` command from our `package.json`
          coverageCommand: yarn run cypress:coverage
